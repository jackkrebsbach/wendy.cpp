cmake_minimum_required(VERSION 3.15)
project(wendy LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Gather all source files for the library
file(GLOB WENDY_SOURCES src/*.cpp)

# Find external libraries
find_library(SYMENGINE_LIBRARY symengine HINTS /opt/homebrew/lib)
find_library(FLINT_LIBRARY flint HINTS /opt/homebrew/lib)
find_library(GMP_LIBRARY gmp HINTS /opt/homebrew/lib)
find_library(MPFR_LIBRARY mpfr HINTS /opt/homebrew/lib)
find_library(SPDLOG_LIBRARY spdlog HINTS /opts/homebrew/lib)
find_library(FMT_LIBRARY fmt HINTS /opts/homebrew/lib)

# Create the static library
add_library(wendy STATIC ${WENDY_SOURCES})

# Specify include directories for the library
target_include_directories(wendy
        PUBLIC
        ${CMAKE_SOURCE_DIR}/src
        /opt/homebrew/include
)

# Link external libraries to your library (for consumers)
target_link_libraries(wendy
        PUBLIC
        ${SYMENGINE_LIBRARY}
        ${FLINT_LIBRARY}
        ${GMP_LIBRARY}
        ${MPFR_LIBRARY}
        ${SPDLOG_LIBRARY}
        ${FMT_LIBRARY}
)

# Example executable
add_executable(example example.cpp)

# Specify include directories for the example (if needed)
target_include_directories(example
        PRIVATE
        ${CMAKE_SOURCE_DIR}/src
        /opt/homebrew/include
)

# Link the example to your library and external dependencies
target_link_libraries(example
        PRIVATE
        wendy
        ${SYMENGINE_LIBRARY}
        ${FLINT_LIBRARY}
        ${GMP_LIBRARY}
        ${MPFR_LIBRARY}
)

# Set the output directory for build artifacts
set_target_properties(wendy example PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}
)
